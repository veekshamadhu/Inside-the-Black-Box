-- database: ./database.sqlite
-- Players + Attributes Table

-- DROP TABLE matchattributes;
-- Then create the table again


CREATE TABLE playersattributes AS 

         SELECT pl.player_api_id,
         pl.player_name,
         pl.player_fifa_api_id,
         STRFTIME('%Y-%m-%d', pl.birthday) AS birthday,
         pl.height AS height,
         STRFTIME('%Y-%m-%d', pa.date) AS pdatetime,
         pa.overall_rating,
         CASE WHEN pa.attacking_work_rate = 'medium' THEN 20
            WHEN pa.attacking_work_rate = 'norm' THEN 20
            WHEN pa.attacking_work_rate = 'high' THEN 30
            ELSE 10 END AS attacking_work_rate,

         CASE WHEN pa.defensive_work_rate = 'high' THEN 30
            WHEN pa.defensive_work_rate = '9' THEN 30
            WHEN pa.defensive_work_rate = '8' THEN 30
            WHEN pa.defensive_work_rate = '7' THEN 30
            WHEN pa.defensive_work_rate = 'medium' THEN 20
            WHEN pa.defensive_work_rate = '6' THEN 20
            WHEN pa.defensive_work_rate = '5' THEN 20
            WHEN pa.defensive_work_rate = '4' THEN 20
            WHEN pa.defensive_work_rate = 'ormal' THEN 20
            WHEN pa.defensive_work_rate = '7' THEN 30
            ELSE 10 END AS defensive_work_rate,
         
         ROUND(( pa.crossing + pa.heading_accuracy + pa.short_passing + pa.volleys 
         + pa.dribbling + pa.curve + pa.long_passing + pa.ball_control
         + pa.interceptions + pa.standing_tackle + pa.sliding_tackle 
         + pa.positioning + pa.vision + pa.marking) /14.0, 2) AS avg_fieldskills,
         
         ROUND((pa.finishing + pa.free_kick_accuracy + pa.long_shots) / 3.0,
         2) AS avg_shootingskills,
        
         ROUND((pa.acceleration + pa.sprint_speed + pa.agility + pa.reactions 
         + pa.balance + pa.shot_power + pa.jumping + pa.stamina + pa.strength
         + pa.aggression) / 10.0, 2) AS avg_physicalattributes,
         
         ROUND((pa.gk_diving + pa.gk_handling + pa.gk_kicking + pa.gk_positioning
         + pa.gk_reflexes) / 5.0, 2) AS avg_goalkeepingskills

FROM Player pl
JOIN Player_Attributes pa
ON pl.player_api_id = pa.player_api_id;

-- Matches Table
CREATE TABLE matchattributes AS 
         SELECT match_api_id AS match_id, 
         country_id,
         CASE WHEN stage < 16 THEN 'early season'
              ELSE 'late season' END AS stage,
         SUBSTRING(date, 6,2) AS month,
         SUBSTRING(date, 3,2) AS year,
         STRFTIME('%Y-%m-%d', date) AS mdatetime,
         home_team_api_id,
         away_team_api_id,
         home_player_1,
         home_player_2,  
         home_player_3,
         home_player_4,
         home_player_5,
         home_player_6,
         home_player_7,
         home_player_8,
         home_player_9,
         home_player_10,
         home_player_11,
         away_player_1,
         away_player_2,
         away_player_3,
         away_player_4,
         away_player_5,
         away_player_6,
         away_player_7,
         away_player_8,
         away_player_9,
         away_player_10,
         away_player_11,

         B365H,
         B365D,
         B365A,
         BWH,
         BWD,
         BWA,
         IWH,
         IWD,
         IWA,
         LBH,
         LBD,
         LBA,
         PSH,
         PSD,
         PSA,
         WHH,
         WHD,
         WHA,
         SJH,
         SJD,
         SJA,
         VCH,
         VCD,
         VCA,
         GBH,
         GBD,
         GBA,
         BSH,
         BSD,
         BSA,

         CASE WHEN home_team_goal > away_team_goal THEN home_team_api_id
               WHEN home_team_goal < away_team_goal THEN away_team_api_id
               ELSE 0 END AS winner

         FROM Match
         WHERE home_player_1 IS NOT NULL
         AND home_player_2 IS NOT NULL
         AND home_player_3 IS NOT NULL
         AND home_player_4 IS NOT NULL
         AND home_player_5 IS NOT NULL
         AND home_player_6 IS NOT NULL
         AND home_player_7 IS NOT NULL
         AND home_player_8 IS NOT NULL
         AND home_player_9 IS NOT NULL
         AND home_player_10 IS NOT NULL
         AND home_player_11 IS NOT NULL
         AND away_player_1 IS NOT NULL
         AND away_player_2 IS NOT NULL
         AND away_player_3 IS NOT NULL
         AND away_player_4 IS NOT NULL
         AND away_player_5 IS NOT NULL
         AND away_player_6 IS NOT NULL
         AND away_player_7 IS NOT NULL
         AND away_player_8 IS NOT NULL
         AND away_player_9 IS NOT NULL
         AND away_player_10 IS NOT NULL
         AND away_player_11 IS NOT NULL;


-- Teams Tables Combined
CREATE TABLE teamscombined AS 
         SELECT ta.team_api_id, 
         tm.team_long_name,
         tm.team_short_name,
         ta.date,
         ROUND((ta.buildUpPlaySpeed + ta.buildUpPlayDribbling + 
         ta.buildUpPlayPassing) / 3.0,
         2) AS buildUpskills,
         ROUND((ta.chanceCreationCrossing + ta.chanceCreationPassing +
         ta.chanceCreationShooting) / 3.0,
         2) AS chanceCreationSkills,
         ROUND((ta.defencePressure+ ta.defenceAggression +
         ta.defenceTeamWidth) / 3.0,
         2) AS defenceSkills,

         ta.buildUpPlayPositioningClass, ta.defenceDefenderLineClass,
         ta.chanceCreationPositioningClass
         
         FROM Team_Attributes ta
         LEFT JOIN Team tm
         ON ta.team_api_id = tm.team_api_id;


